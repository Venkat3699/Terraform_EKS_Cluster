name: 'Terraform'

on:
  push:
    branches: [ "main" ]

jobs:
  checkout:
    name: 'Checkout Repository'
    runs-on: terraform_runner
    steps:
      - name: Checkout Code
        uses: actions/checkout@v4

  setup-aws:
    name: 'Configure AWS Credentials'
    runs-on: terraform_runner
    needs: checkout
    steps:
      - name: 'Configure AWS credentials'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'ap-south-1'

  setup-terraform:
    name: 'Setup Terraform'
    runs-on: terraform_runner
    needs: [checkout, setup-aws]
    steps:
      - name: 'Set up Terraform'
        uses: hashicorp/setup-terraform@v1
        with:
          terraform_version: '1.5.6'

  terraform-init:
    name: 'Terraform Init'
    runs-on: terraform_runner
    needs: setup-terraform
    steps:
      - name: Terraform Init
        run: terraform init

  terraform-fmt:
    name: 'Terraform Format Check'
    runs-on: terraform_runner
    needs: terraform-init
    steps:
      - name: Terraform Format (Auto-fix)
        run: terraform fmt -recursive

      - name: Terraform Format Check
        run: terraform fmt -check


  terraform-validate:
    name: 'Terraform Validate'
    runs-on: terraform_runner
    needs: terraform-fmt
    steps:
      - name: Terraform Validate
        run: terraform validate

  install-tflint:
    name: 'Install TFLint'
    runs-on: terraform_runner
    needs: terraform-validate
    steps:
      - name: 'Install TFLint'
        run: |
          curl -s https://raw.githubusercontent.com/terraform-linters/tflint/master/install_linux.sh | bash
          echo "$HOME/.tflint/bin" >> $GITHUB_PATH  # Ensure it's available in the PATH
          export PATH=$HOME/.tflint/bin:$PATH       # Immediate path update
          tflint --version  # Verify installation
      
      
  tflint-check:
    name: 'Run TFLint'
    runs-on: terraform_runner
    needs: install-tflint
    steps:
      - name: 'TFLint'
        run: |
          tflint --init
          tflint

  install-tfsec:
    name: 'Install tfsec'
    runs-on: terraform_runner
    needs: tflint-check
    steps:
      - name: 'Install tfsec'
        run: |
          curl -sLo tfsec https://github.com/aquasecurity/tfsec/releases/download/v1.28.1/tfsec-linux-amd64
          chmod +x tfsec
          sudo mv tfsec /usr/local/bin/
          tfsec --version

  tfsec-check:
    name: 'Run tfsec'
    runs-on: terraform_runner
    needs: install-tfsec
    steps:
      - name: 'tfsec'
        run: tfsec .

  terraform-plan:
    name: 'Terraform Plan'
    runs-on: terraform_runner
    needs: tfsec-check
    steps:
      - name: 'Terraform Plan'
        run: terraform plan -out=tfplan

  terraform-apply:
    name: 'Terraform Apply'
    runs-on: terraform_runner
    needs: terraform-plan
    if: github.ref == 'refs/heads/main'
    steps:
      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan

  terraform-destroy:
    name: 'Terraform Destroy'
    runs-on: terraform_runner
    needs: terraform-apply
    if: github.event_name == 'workflow_dispatch'  # Only runs if manually triggered
    steps:
    - name: Terraform Destroy
      run: terraform destroy -auto-approve
